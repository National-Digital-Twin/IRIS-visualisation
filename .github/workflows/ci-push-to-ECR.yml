name: Backend CD push to ECR

on:
  workflow_call:
    inputs:
      aws_account_number:
        type: string
        required: true
        description: "AWS Account Number for ECR"
      repo_name:
        type: string
        required: true
        description: "Name of the repository in ECR"
      version:
        type: string
        required: false
        description: "Optional version number to skip version generation steps"
  workflow_dispatch:
    inputs:
      aws_account_number:
        type: string
        required: true
        description: "AWS Account Number for ECR"
      repo_name:
        type: string
        required: true
        description: "Name of the repository in ECR"
      version:
        type: string
        required: false
        description: "Optional version number to skip version generation steps"

permissions:
  id-token: write
  contents: read

jobs:
  docker-build-push:
    name: Docker Build & Push
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
            node-version-file: '.nvmrc'
            cache: 'npm'
            cache-dependency-path: package-lock.json
      - run: npm ci
      - run: npm run build
  

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Set VERSION from versioning job
        run: |
          echo "VERSION=${{ inputs.version }}" >> $GITHUB_ENV

      - name: Debug Version Output
        run: |
          echo "Version used for tagging: $VERSION"

      - name: Build Docker Image
        run: |
          docker build --load \
                        -t ${{ inputs.aws_account_number }}.dkr.ecr.eu-west-2.amazonaws.com/${{ inputs.repo_name }}:${{ github.sha }} \
                        -t ${{ inputs.aws_account_number }}.dkr.ecr.eu-west-2.amazonaws.com/${{ inputs.repo_name }}:${{ env.VERSION }} \
                        -t ${{ inputs.aws_account_number }}.dkr.ecr.eu-west-2.amazonaws.com/${{ inputs.repo_name }}:latest \
                        -f ./docker/CI-Dockerfile ./

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ inputs.aws_account_number }}:role/ecs-access-for-github
          aws-region: eu-west-2
          role-session-name: githubsession

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Push Docker Image to ECR
        run: |
          docker image push --all-tags ${{ inputs.aws_account_number }}.dkr.ecr.eu-west-2.amazonaws.com/${{ inputs.repo_name }}

      - name: Verify Docker Image
        run: |
          docker images
          aws ecr describe-images --repository-name ${{ inputs.repo_name }} --query 'sort_by(imageDetails, &imagePushedAt)[-1]' --output table  >> $GITHUB_STEP_SUMMARY