name: IRIS CI

on:
  workflow_call:
  pull_request:
  workflow_dispatch:

jobs:
  dependencies:
    runs-on: ubuntu-latest
    permissions:
      packages: read
      contents: read
    env:
      GITHUB_ACCESS_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
          cache: 'npm'
          cache-dependency-path: package-lock.json

      - name: Install dependencies
        run: npm ci
        
      - name: Run npm outdated (Dependency Update Check)
        run: npm outdated
        continue-on-error: true


  linting:
    name: Code Linting
    runs-on: ubuntu-latest
    timeout-minutes: 10
    needs: dependencies
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
          cache: 'npm'
          cache-dependency-path: package-lock.json
      - name: Check linting
        run: | 
              npm ci 
              npm run prepare 
              npm run lint:app
              npm run lint:styles
      
      - name: TypeScript Check
        working-directory: frontend
        run: npm tsc --noEmit
        continue-on-error: true

      - name: Run Prettier
        working-directory: frontend
        run: npm prettier --check "src/**/*.{js,ts,tsx}"
        continue-on-error: true

      - name: Run Sort-Package-Json (Import Sorting)
        run: |
                echo "Running sort-package-json"
                npx sort-package-json --check
        continue-on-error: true
   
      - name: Run Audit-CI (Security Check)
        run: |
                echo "Running audit-ci"
                npx audit-ci --high
        continue-on-error: true

  testing:
    name: Unit Testing
    runs-on: ubuntu-latest
    needs: linting
    timeout-minutes: 10
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
          cache: 'npm'
          cache-dependency-path: package-lock.json
      - name: Run Unit test
        run: | 
              npm install 
              npm test

  security-scanning:
    name: Security Scanning
    runs-on: ubuntu-latest
    timeout-minutes: 10
    needs: testing
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Trivy
        run: |
          wget -q https://github.com/aquasecurity/trivy/releases/download/v0.18.3/trivy_0.18.3_Linux-64bit.deb # Update Trivy Version if needed
          sudo dpkg -i trivy_0.18.3_Linux-64bit.deb

      - name: Run Trivy Scan
        run: |
          trivy fs --severity HIGH .

  docker-build-test-scan:
    name: Docker Build, Test & Scan
    runs-on: ubuntu-latest
    timeout-minutes: 20
    needs: security-scanning

    permissions:
      contents: read
      packages: write
    env:
      GITHUB_ACCESS_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
            node-version-file: '.nvmrc'
            cache: 'npm'
            cache-dependency-path: package-lock.json
      - run: npm ci
      - run: npm run build

      - name: Zip the built application
        if: success()
        run: zip -r dist.zip dist

      - name: Upload built application
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: iris-visualisation.zip
          path: dist
          retention-days: 28

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image
        uses: docker/build-push-action@v6
        with:
          file: "docker/Dockerfile"
          context: "./"
          load: true
          tags: "national-digital-twin/iris-visualisation:latest"

      - name: Run Docker Image
        run: |
            docker images
            docker run --rm -d -p 80:80 --name iris national-digital-twin/iris-visualisation:latest
            sleep 10
            docker logs iris
            docker exec iris ls -l /usr/share/nginx/html

      - name: Ping App
        run: |
          status_code=$(curl -s -o /dev/null -w "%{http_code}" http://localhost:80/)
          if [[ "$status_code" == "200" ]]; then
            echo "Ping successful (200 OK)"  >> $GITHUB_STEP_SUMMARY
          else
            echo "Ping failed with status code: $status_code"  >> $GITHUB_STEP_SUMMARY
            exit 1  # Indicate an error
          fi

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@0.28.0
        with:
          image-ref: "national-digital-twin/iris-visualisation:latest"
          format: "table"
          exit-code: "1"
          ignore-unfixed: true
          vuln-type: "os,library"
          severity: "CRITICAL,HIGH"

      - name: Cleanup
        if: always()
        run: |
          docker stop iris